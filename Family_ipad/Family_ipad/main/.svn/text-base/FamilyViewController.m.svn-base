//
//  FamilyViewController.m
//  Family_ipad
//
//  Created by walt.chan on 13-1-8.
//  Copyright (c) 2013年 walt.chan. All rights reserved.
//

#import "FamilyViewController.h"
#import "FamilyMemberCell.h"
#import "MyHttpClient.h"
#import "PDKeychainBindings.h"
#import "InviteFamilyViewController.h"
#import "AppDelegate.h"
#import "RootViewController.h"
#import "StackScrollViewController.h"
#import "RXMLElement.h"
#import "UIViewWithShadow.h"
#import "PostBaseViewController.h"
#import "PostBaseView.h"
#import "MenuViewController.h"
#define WEEKDAY $arr(@"零", @"日",@"一", @"二", @"三", @"四", @"五", @"六")
#define WEATHER_DIC $dict(@"sun.png",SUN,@"cloud.png",CLOUD,@"rain.png",RAIN,@"thound.png",THUND,@"cloudy.png",CLOUDY)
#define SUN @"晴"
#define RAIN  @"雨"
#define CLOUD   @"多云"
#define THUND   @"雷阵雨"
#define CLOUDY  @"阴"
#define YOUDAO_API @"http://life.tenpay.com/cgi-bin/mobile/MobileQueryAttribution.cgi?chgmobile="
#define PER_ROW 5
#define WEATHER_XML 1
#define PHONE_XML 2
@interface FamilyViewController ()
{
    BOOL    storingCharacterData;
    NSUInteger xmlType;

}
@end

@implementation FamilyViewController
- (void)showPostViewController:(id)sender{
    //    PostBaseView *postView = [[[NSBundle mainBundle]loadNibNamed:@"PostBaseViewController" owner:self options:nil] objectAtIndex:0];
    //    [[KGModal sharedInstance] showWithContentViewInMiddle:postView andAnimated:YES];
    //    [postView initPostView:nil];
    REMOVEDETAIL;
    PostBaseViewController *con = [[PostBaseViewController alloc]initWithNibName:@"PostBaseViewController" bundle:nil];
    [[AppDelegate instance].rootViewController.stackScrollViewController addViewInSlider:con invokeByController:self isStackStartView:FALSE];
    [con.postView initPostView:nil];
    
    
}
- (IBAction )addFamilyMember:(id)sender
{
    InviteFamilyViewController *con = [[InviteFamilyViewController alloc] initWithNibName:@"InviteFamilyViewController" bundle:nil];
    [[AppDelegate instance].rootViewController.stackScrollViewController addViewInSlider:con invokeByController:[AppDelegate instance].rootViewController isStackStartView:FALSE];
}
- (void)getPhoneAddress
{
    NSString *requestStr = $str(@"%@%@",YOUDAO_API,[ConciseKit userDefaultsObjectForKey:USER_NAME]);
    AFHTTPRequestOperation *operation =[[AFHTTPRequestOperation alloc]initWithRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:requestStr]]];
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSStringEncoding gbkEncoding = CFStringConvertEncodingToNSStringEncoding(kCFStringEncodingGB_18030_2000);
        NSString *str = [[NSString alloc]initWithData:responseObject encoding:gbkEncoding];
        RXMLElement *rootXML = [RXMLElement elementFromXMLString:str encoding:gbkEncoding];
        _cityLabel.text = [rootXML child:@"city"].text;
        if (!emptystr(_cityLabel.text)) {
        NSString *weatherRequestStr = $str(@"http://php.weather.sina.com.cn/xml.php?password=DJOYnieT8234jlsK&day=0&city=%@",[_cityLabel.text stringByAddingPercentEscapesUsingEncoding:gbkEncoding]);
            AFHTTPRequestOperation *operation2 =[[AFHTTPRequestOperation alloc]initWithRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:weatherRequestStr]]];
            [operation2 setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
             
                RXMLElement *rootXML2 = [RXMLElement elementFromXMLData:responseObject];
                RXMLElement *rxmlWeather = [rootXML2 child:@"Weather"];
                _weatherLabel.text = [rxmlWeather child:@"status2"].text;
                NSString *weatherImgKey = _weatherLabel.text;
                if ([_weatherLabel.text rangeOfString:RAIN].location != NSNotFound) {
                    weatherImgKey = RAIN;
                }
                _tempertureLbl.text = $str(@"%@~%@℃",[rxmlWeather child:@"temperature2"].text,[rxmlWeather child:@"temperature1"].text);
                _weatherImg.image = [UIImage imageNamed:[WEATHER_DIC objectForKey:weatherImgKey]];
                
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                ;
            }];
            [operation2 start];
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
    }];
    [operation start];


}

- (IBAction)setInfo:(id)sender
{
    NSDate *date = [NSDate date];
    NSCalendar *calendar =[NSCalendar currentCalendar];
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"MM月dd日"];
   _dateLabel.text =[dateFormatter stringFromDate:date];
    NSDateComponents *comps =[calendar components:(NSWeekCalendarUnit | NSWeekdayCalendarUnit |NSWeekdayOrdinalCalendarUnit)fromDate:date];
    NSInteger weekday = [comps weekday]; // 星期几（注意，周日是“1”，周一是“2”。。。。
    _weekdayLabel.text = $str(@"星期%@",[WEEKDAY objectAtIndex:weekday]);
    

}
- (void)sendRequest:(id)sender
{
    NSString *requestStr;
    if (!_userId) {//我自己的空间
        requestStr = $str(@"%@space.php?m_auth=%@&page=%d", BASE_URL, GET_M_AUTH, currentPage);
    } else {//别人的空间
        requestStr = $str(@"%@space.php?m_auth=%@&page=%d&uid=%@", BASE_URL, GET_M_AUTH, currentPage, _userId);
    }
    [[MyHttpClient sharedInstance] commandWithPathAndNoHUD:requestStr
                                      onCompletion:^(NSDictionary *dict) {
                                          _fmembers = [[[dict objectForKey:WEB_DATA] objectForKey:PESONAL_MEMBER_NUM] intValue];
                                          [self stopLoading:sender];
                                          if (needRemoveObjects == YES) {
                                              [dataArray removeAllObjects];
                                              [_tableView reloadData];
                                              needRemoveObjects = NO;
                                          }
                                          NSArray *resultArr = [[dict objectForKey:WEB_DATA] objectForKey:FAMILY_LIST];
                                          if ([resultArr count]==0&&currentPage == 1) {
                                              _void_familyImg.hidden=NO;
                                          }else{
                                              _void_familyImg.hidden = YES;
                                          }
                                          [ConciseKit setUserDefaultsWithObject:resultArr forKey:FAMILY_LIST];
                                          
                                          [dataArray addObjectsFromArray:resultArr];
                                          [_tableView reloadData];
                                          
                                      }
                                           failure:^(NSError *error) {
                                               [self stopLoading:sender];
                                               currentPage--;
                                           }];
}
- (void)showVoidFeedImg:(id)sender
{
    _void_feedImg.hidden = NO;
}
- (IBAction)addAction:(id)sender
{
    NSLog(@"add");
}
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        _userId = nil;
        _xmlStr = [[NSMutableString alloc]init];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    [self setInfo:nil];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(showVoidFeedImg:) name:VOID_FEED_NOTIFICATION object:nil];
    UIViewWithShadow* verticalLineView = [[UIViewWithShadow alloc] initWithFrame:CGRectMake(5, 0, 5 , self.view.frame.size.height)] ;
    [verticalLineView setBackgroundColor:[UIColor clearColor]];
    [verticalLineView setAutoresizingMask:UIViewAutoresizingFlexibleHeight];
    [verticalLineView setClipsToBounds:NO];
    [self.view addSubview:verticalLineView];
   
    if (!_userId) {
        [self getPhoneAddress];
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma mark -
#pragma mark Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    // Return the number of rows in the section.
    if ([dataArray count]>0) {
        if (_fmembers%PER_ROW == 0 ) 
            return _fmembers/PER_ROW;
        else
            return _fmembers/PER_ROW +1;
    }
    else
        return 1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 79;
}

// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"familyMemberCell";
	FamilyMemberCell *cell=(FamilyMemberCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        NSArray *array = [[NSBundle mainBundle] loadNibNamed:@"FamilyMemberCell" owner:self options:nil];
		cell = [array objectAtIndex:0];
		[cell setSelectionStyle:UITableViewCellSelectionStyleNone];
        
    }
    cell.indexRow = indexPath.row;
    cell.userid = _userId;
    // Configure the cell...
    [cell setCellData:dataArray];
    
    return cell;
}
#pragma mark xml
//遍例xml的节点
- (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName
  namespaceURI:(NSString *)namespaceURI
 qualifiedName:(NSString *)qName
	attributes:(NSDictionary *)attributeDict
{
    if (xmlType == PHONE_XML) {
        if ([elementName isEqualToString:@"city"])
            storingCharacterData = YES;
        else
            storingCharacterData = NO;
    }
    else if (xmlType == WEATHER_XML){
        if ([elementName isEqualToString:@"status2"]||[elementName isEqualToString:@"temperature1"]||[elementName isEqualToString:@"temperature2"])
            storingCharacterData = YES;
        else
            storingCharacterData = NO;
    }

}

//节点有值则调用此方法
- (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string
{
    if (storingCharacterData) {
        if (![string isEqualToString:@"\n"]) {
            if (xmlType == PHONE_XML) {
                _cityLabel.text = string;
            }
            else if (xmlType == WEATHER_XML)
            {
                _weatherLabel.text = string;
                _weatherImg.image = [UIImage imageNamed:[WEATHER_DIC objectForKey:string]];
            }
        }
    }
}
//当遇到结束标记时，进入此句
- (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName
  namespaceURI:(NSString *)namespaceURI
 qualifiedName:(NSString *)qName
{
    
}
@end
